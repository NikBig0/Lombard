//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Lombard
{
    using System;
    using System.Collections.Generic;
    using System.IO;

    public partial class Item
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Item()
        {
            this.Deals = new HashSet<Deal>();
        }


        public string GetPhoto
        {
            get
            {
                if (Photo is null)
                    return Directory.GetCurrentDirectory() + @"\Images\picture.png";
                return Directory.GetCurrentDirectory() + @"\Images\" + Photo.Trim();
            }
        }



        public string GetCountInStock
        {
            get
            {
                return $"в наличии на складе {Count}";


            }
        }

        public int Item_id { get; set; }
        public int Id_category { get; set; }
        public int Client_ID { get; set; }
        public int Status_ID { get; set; }
        public string Item_Name { get; set; }
        public int Count { get; set; }
        public double evaluation_cost { get; set; }
        public string Description { get; set; }
        public string Photo { get; set; }
    
        public virtual Category Category { get; set; }
        public virtual Client Client { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Deal> Deals { get; set; }
        public virtual ItemStatu ItemStatu { get; set; }
    }
}
